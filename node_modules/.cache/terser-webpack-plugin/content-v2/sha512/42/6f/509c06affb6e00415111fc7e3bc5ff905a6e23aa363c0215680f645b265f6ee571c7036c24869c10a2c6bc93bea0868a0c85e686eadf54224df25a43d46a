{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{478:function(t,s,a){\"use strict\";a.r(s);var r=a(18),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"java位运算-与或非详解\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#java位运算-与或非详解\"}},[t._v(\"#\")]),t._v(\" Java位运算-与或非详解\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/essay-img/2-javaweiyunsuan.png\",alt:\"convert-decimal-to-binary.jpg\"}})]),t._v(\" \"),a(\"h3\",{attrs:{id:\"一-二进制和十进制转换方法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一-二进制和十进制转换方法\"}},[t._v(\"#\")]),t._v(\" 一，二进制和十进制转换方法\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_1-十进制转二进制\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-十进制转二进制\"}},[t._v(\"#\")]),t._v(\" 1. 十进制转二进制\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/essay-img/2-10to2.png\",alt:\"convert-decimal-to-binary.jpg\"}})]),t._v(\" \"),a(\"p\",[t._v(\"（图片来源 —— wikihow.com）\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_2-二进制转10进制\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-二进制转10进制\"}},[t._v(\"#\")]),t._v(\" 2. 二进制转10进制\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/essay-img/2-2to10.jpeg\",alt:\"convert-binary-to-decimal.jpg\"}})]),t._v(\" \"),a(\"p\",[t._v(\"（图片来源 —— wikihow.com）\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"二-基本概念\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二-基本概念\"}},[t._v(\"#\")]),t._v(\" 二，基本概念\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_1-机器数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-机器数\"}},[t._v(\"#\")]),t._v(\" 1. 机器数\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"一个数在计算机中的二进制表示形式,  叫做这个数的机器数。\")]),t._v(\" \"),a(\"p\",[t._v(\"机器数是带符号的，在计算机用一个数的最高位存放符号, 正数为0, 负数为1。\")])]),t._v(\" \"),a(\"p\",[t._v(\"比如，十进制中的数 6，计算机字长为8位，转换成二进制就是00000110。如果是 -6 ，就是 10000110 。\")]),t._v(\" \"),a(\"p\",[t._v(\"这里的 00000110 和 10000110就是机器数。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_2-真值\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-真值\"}},[t._v(\"#\")]),t._v(\" 2. 真值\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"第一位是符号位，所以机器数的形式值就不等于真正的数值。例如上面的有符号数 10000110，其最高位1代表负，其真正数值是 -6 而不是形式值134（10000110转换成十进制等于134）。所以为区别起见，将带符号位的机器数对应的真正数值称为机器数的真值。\")])]),t._v(\" \"),a(\"p\",[t._v(\"例：0000 0001的真值 = +000 0001 = +1，1000 0001的真值 = –000 0001 = –1\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_3-原码\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-原码\"}},[t._v(\"#\")]),t._v(\" 3. 原码\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"原码是一种计算机中对数字的二进制定点表示方法。原码表示在数值前面增加了一位符号位（即最高位为符号位）：正数该位为0，负数该位为1（0有两种表示：+0和-0），其余位表示数值的大小。 原码也是机器数的一种表示方式。\")])]),t._v(\" \"),a(\"p\",[t._v(\"比如如果是8位二进制:\")]),t._v(\" \"),a(\"p\",[t._v(\"[+6] = 0000 0110\")]),t._v(\" \"),a(\"p\",[t._v(\"[-6] = 1000 0110\")]),t._v(\" \"),a(\"p\",[t._v(\"第一位是符号位. 因为第一位是符号位, 所以8位二进制数的取值范围就是:\")]),t._v(\" \"),a(\"p\",[t._v(\"[1111 1111 , 0111 1111]\")]),t._v(\" \"),a(\"p\",[t._v(\"即 [-127 , 127]\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_4-反码\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-反码\"}},[t._v(\"#\")]),t._v(\" 4. 反码\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"正数的反码与其原码相同；\")]),t._v(\" \"),a(\"p\",[t._v(\"负数的反码是在其原码的基础上, 符号位不变，其余各个位取反.\")])]),t._v(\" \"),a(\"p\",[t._v(\"[+6] = 0000 0110(原码) = 0000 0110(反码)\")]),t._v(\" \"),a(\"p\",[t._v(\"[-6] = 1000 0110(原码) = 1111 1001(反码)\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"_5-补码\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-补码\"}},[t._v(\"#\")]),t._v(\" 5.补码\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"正数的补码与其原码相同；\")]),t._v(\" \"),a(\"p\",[t._v(\"负数的补码是在其原码的基础上, 符号位不变, 其余各位取反, 最后+1. (补码=反码+1)\")])]),t._v(\" \"),a(\"p\",[t._v(\"[+6] = 0000 0110(原码) = 0000 0110(反码) = 0000 0110(补码)\")]),t._v(\" \"),a(\"p\",[t._v(\"[-6] = 1000 0110(原码) = 1111 1001(反码) =  1111 1010(补码)\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"三-常用位运算\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三-常用位运算\"}},[t._v(\"#\")]),t._v(\" 三，常用位运算\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_1-与-6-7\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-与-6-7\"}},[t._v(\"#\")]),t._v(\" 1. 与 (6 & 7)\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"6和7的二进制位进行与操作，只有对应的二进制位两个都为1结果才为1，否则为0\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"例如\")]),t._v(\" \"),a(\"p\",[t._v(\"十进制 = 二进制\")]),t._v(\" \"),a(\"p\",[t._v(\"6 = 110\")]),t._v(\" \"),a(\"p\",[t._v(\"7 = 111\")]),t._v(\" \"),a(\"p\",[t._v(\"6 & 7= 110\")]),t._v(\" \"),a(\"p\",[t._v(\"二进制110转换成十进制是6\")]),t._v(\" \"),a(\"p\",[t._v(\"例如：判断奇偶 6 & 0x1\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_2-或-6-7\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-或-6-7\"}},[t._v(\"#\")]),t._v(\" 2. 或(6 | 7)\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"6和7的二进制位进行或操作，只有对应的二进制位两个有一个为1结果就是1，否则为0\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"|\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"|\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"|\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"|\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"例如：\")]),t._v(\" \"),a(\"p\",[t._v(\"十进制 = 二进制\")]),t._v(\" \"),a(\"p\",[t._v(\"6 = 110\")]),t._v(\" \"),a(\"p\",[t._v(\"7 = 111\")]),t._v(\" \"),a(\"p\",[t._v(\"6 | 7= 111\")]),t._v(\" \"),a(\"p\",[t._v(\"二进制111转换成十进制是 7\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_3-非-6\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-非-6\"}},[t._v(\"#\")]),t._v(\" 3. 非(~6)\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"6的二进制位的每一位取反操作，二进制位如果是0，取反后是1，反之是0\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"~\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"~\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"在Java中整型占4字节(32个二进制位)\")]),t._v(\" \"),a(\"p\",[t._v(\"6 = 00000000 00000000 00000000 00000110\")]),t._v(\" \"),a(\"p\",[t._v(\"~6 = 11111111 11111111 11111111 11111001\")]),t._v(\" \"),a(\"p\",[t._v(\"上面二进制最高位是1，表示负数，而负数在计算机中是按照补码存储的。\")]),t._v(\" \"),a(\"p\",[t._v(\"补码-1得到反码：11111111 11111111 11111111 11111000\")]),t._v(\" \"),a(\"p\",[t._v(\"首位符号位不变，其他取反得到原码：10000000 00000000 00000000 00000111\")]),t._v(\" \"),a(\"p\",[t._v(\"二进制原码转换成十进制是 -7\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_4-左移-6-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-左移-6-2\"}},[t._v(\"#\")]),t._v(\" 4. 左移(6<<2)\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"把6表示的二进制数左移2位，左边高位超出舍弃，右边低位补0;\")]),t._v(\" \"),a(\"p\",[t._v(\"在数字 x 上左移 y 位时，得出的结果是 x * 2^y ，即6<<2=6*2^2\")])]),t._v(\" \"),a(\"p\",[t._v(\"6 =  00000110\")]),t._v(\" \"),a(\"p\",[t._v(\"6>>2 = 00011000 = 24\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_5-有符号右移-6-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-有符号右移-6-2\"}},[t._v(\"#\")]),t._v(\" 5. 有符号右移(6>>2)\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"把6表示的二进制数右移2位，向右被移出的位被丢弃，拷贝最左侧的位以填充左侧。由于新的最左侧的位总是和以前相同，符号位没有被改变。所以被称作 “符号传播”。\")]),t._v(\" \"),a(\"p\",[t._v(\"因为负数在内存中是以补码形式存在的，所有首先根据负数的原码求出负数的补码\")])]),t._v(\" \"),a(\"p\",[t._v(\"正数6：\")]),t._v(\" \"),a(\"p\",[t._v(\"6 =  00000110\")]),t._v(\" \"),a(\"p\",[t._v(\"6>>2 = 00000010 = 2\")]),t._v(\" \"),a(\"p\",[t._v(\"负数-6：\")]),t._v(\" \"),a(\"p\",[t._v(\"-6右移2位\")]),t._v(\" \"),a(\"p\",[t._v(\"-6的原码：10000110\")]),t._v(\" \"),a(\"p\",[t._v(\"-6的反码：11111001  （原码符号位不变，其余按位取反）\")]),t._v(\" \"),a(\"p\",[t._v(\"-6的补码：11111010 （反码+1）\")]),t._v(\" \"),a(\"p\",[t._v(\"右移2位：11111110\")]),t._v(\" \"),a(\"p\",[t._v(\"补码右移不是最终结果，需要转成原码，才是最终结果\")]),t._v(\" \"),a(\"p\",[t._v(\"按位取反：10000001（保留符号位，其他位取反）\")]),t._v(\" \"),a(\"p\",[t._v(\"+1得原码：10000010\")]),t._v(\" \"),a(\"p\",[t._v(\"最终结果 -2\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_6-无符号右移-6-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-无符号右移-6-2\"}},[t._v(\"#\")]),t._v(\" 6，无符号右移(6>>>2)\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"把6表示的二进制数右移2位, 向右被移出的位被丢弃，左侧用 0 填充。\")]),t._v(\" \"),a(\"p\",[t._v(\"因为符号位变成了 0，所以结果总是非负的。\")])]),t._v(\" \"),a(\"p\",[t._v(\"正数6：\")]),t._v(\" \"),a(\"p\",[t._v(\"6 =  00000110\")]),t._v(\" \"),a(\"p\",[t._v(\"6>>2 = 00000010 = 2\")]),t._v(\" \"),a(\"p\",[t._v(\"负数-6：\")]),t._v(\" \"),a(\"p\",[t._v(\"-6的原码：10000000000000000000000000000110\")]),t._v(\" \"),a(\"p\",[t._v(\"-6的反码：11111111111111111111111111111001  （原码符号位不变，其余按位取反）\")]),t._v(\" \"),a(\"p\",[t._v(\"-6的补码：11111111111111111111111111111010 （反码+1）\")]),t._v(\" \"),a(\"p\",[t._v(\"右移2位：00111111111111111111111111111110\")]),t._v(\" \"),a(\"p\",[t._v(\"原码：00111111111111111111111111111110（正数的原码补码相同）\")]),t._v(\" \"),a(\"p\",[t._v(\"最终结果 1073741822\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"四-实际应用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四-实际应用\"}},[t._v(\"#\")]),t._v(\" 四，实际应用\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_1-判断奇偶数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-判断奇偶数\"}},[t._v(\"#\")]),t._v(\" 1. 判断奇偶数\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" m \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" n \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"7\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"m \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"%\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"偶数\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"奇数\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//偶数\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"%\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"偶数\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"奇数\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//奇数\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"m \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"奇数\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"偶数\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//偶数\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"奇数\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"偶数\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//奇数\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"_2-redis的bigmap和hyperloglog\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-redis的bigmap和hyperloglog\"}},[t._v(\"#\")]),t._v(\" 2. redis的bigmap和HyperLogLog\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"通过位运算可以做基数统计，极大的节省内存，像注册IP数、每日访问 IP 数、页面实时UV）、在线用户数，这个后面可以单独写一篇\")])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}