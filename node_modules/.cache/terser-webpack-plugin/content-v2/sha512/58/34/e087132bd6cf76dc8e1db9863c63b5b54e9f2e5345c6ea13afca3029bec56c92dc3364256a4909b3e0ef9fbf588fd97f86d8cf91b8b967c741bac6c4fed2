{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{497:function(s,t,a){\"use strict\";a.r(t);var e=a(18),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"mysql主从复制和原理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mysql主从复制和原理\"}},[s._v(\"#\")]),s._v(\" MySQL主从复制和原理\")]),s._v(\" \"),a(\"p\",[s._v(\"对于现在的系统来说，在业务复杂的系统中，数据库往往是应用的瓶颈，单机往往是不能扛住大型系统的并发压力的，这时候需要从数据库方面下手解决其瓶颈，例如sql语句需要锁表，导致暂时不能使用读的服务，那么就很影响运行中的业务。使用主从之后，从库的读操作是不受影响的。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"一、为什么需要主从复制\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、为什么需要主从复制\"}},[s._v(\"#\")]),s._v(\" 一、为什么需要主从复制？\")]),s._v(\" \"),a(\"p\",[s._v(\"1，使用主从复制，让主库负责写，从库负责读，这样，即使主库出现了锁表的情景，通过读从库也可以保证业务的正常运作。\")]),s._v(\" \"),a(\"p\",[s._v(\"2，架构的扩展。业务量越来越大，I/O访问频率过高，单机无法满足，此时做多库的存储，降低磁盘I/O访问的频率，提高单个机器的I/O性能。\")]),s._v(\" \"),a(\"p\",[s._v(\"3，主从多台服务器，同样也可以当作数据备份的。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"二、什么是mysql的主从复制\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、什么是mysql的主从复制\"}},[s._v(\"#\")]),s._v(\" 二、什么是mysql的主从复制？\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"MySQL 主从复制是指数据可以从一个MySQL数据库服务器主节点复制到一个或多个从节点。MySQL 默认采用异步复制方式，这样从节点不用一直访问主服务器来更新自己的数据，数据的更新可以在远程连接上进行，从节点可以复制主数据库中的所有数据库或者特定的数据库或者特定的表。\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"三、mysql复制原理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、mysql复制原理\"}},[s._v(\"#\")]),s._v(\" 三、mysql复制原理\")]),s._v(\" \"),a(\"h5\",{attrs:{id:\"原理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#原理\"}},[s._v(\"#\")]),s._v(\" 原理：\")]),s._v(\" \"),a(\"p\",[s._v(\"（1）master服务器将数据的改变记录二进制binlog日志，当master上的数据发生改变时，则将其改变写入二进制日志中；\")]),s._v(\" \"),a(\"p\",[s._v(\"（2）slave服务器会在一定时间间隔内对master二进制日志进行探测其是否发生改变，如果发生改变，则开始一个I/O Thread请求master二进制事件；\")]),s._v(\" \"),a(\"p\",[s._v(\"（3）同时主节点为每个I/O线程启动一个dump线程，用于向其发送二进制事件，并保存至从节点本地的中继日志中，从节点将启动SQL线程从中继日志中读取二进制日志，在本地重放，使得其数据和主节点的保持一致，最后I/OThread和SQLThread将进入睡眠状态，等待下一次被唤醒。\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"也就是说：\\n从库会生成两个线程,一个I/O线程,一个SQL线程;\\nI/O线程会去请求主库的binlog,并将得到的binlog写到本地的relay-log(中继日志)文件中;\\n主库会生成一个log dump线程,用来给从库I/O线程传binlog;\\nSQL线程,会读取relay log文件中的日志,并解析成sql语句逐一执行;\\n\")])])]),a(\"h5\",{attrs:{id:\"注意\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#注意\"}},[s._v(\"#\")]),s._v(\" 注意：\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"master将操作语句记录到binlog日志中，然后授予slave远程连接的权限（master一定要开启binlog二进制日志功能；通常为了数据安全考虑，slave也开启binlog功能）。\")]),s._v(\" \"),a(\"li\",[s._v(\"slave开启两个线程：IO线程和SQL线程。其中：IO线程负责读取master的binlog内容到中继日志relay log里；SQL线程负责从relay log日志里读出binlog内容，并更新到slave的数据库里，这样就能保证slave数据和master数据保持一致了。\")]),s._v(\" \"),a(\"li\",[s._v(\"Mysql复制至少需要两个Mysql的服务，当然Mysql服务可以分布在不同的服务器上，也可以在一台服务器上启动多个服务。\")]),s._v(\" \"),a(\"li\",[s._v(\"Mysql复制最好确保master和slave服务器上的Mysql版本相同（如果不能满足版本一致，那么要保证master主节点的版本低于slave从节点的版本）\")]),s._v(\" \"),a(\"li\",[s._v(\"master和slave两节点间时间需同步。\")])]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/mysql-plus/15-master-slave-flow.png\",alt:\"image-20210830194128684\"}}),s._v(\"\\n图来源《高性能mysql》\")]),s._v(\" \"),a(\"h5\",{attrs:{id:\"具体步骤\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#具体步骤\"}},[s._v(\"#\")]),s._v(\" 具体步骤：\")]),s._v(\" \"),a(\"p\",[s._v(\"1、从库通过手工执行change master to 语句连接主库，提供了连接的用户一切条件（user 、password、port、ip），并且让从库知道，二进制日志的起点位置（file名 position 号）； start slave\")]),s._v(\" \"),a(\"p\",[s._v(\"2、从库的IO线程和主库的dump线程建立连接。\")]),s._v(\" \"),a(\"p\",[s._v(\"3、从库根据change master to 语句提供的file名和position号，IO线程向主库发起binlog的请求。\")]),s._v(\" \"),a(\"p\",[s._v(\"4、主库dump线程根据从库的请求，将本地binlog以events的方式发给从库IO线程。\")]),s._v(\" \"),a(\"p\",[s._v(\"5、从库IO线程接收binlog events，并存放到本地relay-log中，传送过来的信息，会记录到master.info中。\")]),s._v(\" \"),a(\"p\",[s._v(\"6、从库SQL线程应用relay-log，并且把应用过的记录到relay-log.info中，默认情况下，已经应用过的relay 会自动被清理purge。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"四、mysql主从同步延时分析\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四、mysql主从同步延时分析\"}},[s._v(\"#\")]),s._v(\" 四、mysql主从同步延时分析\")]),s._v(\" \"),a(\"p\",[s._v(\"mysql的主从复制都是单线程的操作，主库对所有DDL和DML产生的日志写进binlog，由于binlog是顺序写，所以效率很高，slave的sql thread线程将主库的DDL和DML操作事件在slave中重放。DML和DDL的IO操作是随机的，不是顺序，所以成本要高很多，另一方面，由于sql thread也是单线程的，当主库的并发较高时，产生的DML数量超过slave的SQL thread所能处理的速度，或者当slave中有大型query语句产生了锁等待，那么延时就产生了。\")]),s._v(\" \"),a(\"p\",[s._v(\"解决方案：\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"1.业务的持久化层的实现采用分库架构，mysql服务可平行扩展，分散压力。\")])]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"2.单个库读写分离，一主多从，主写从读，分散压力。这样从库压力比主库高，保护主库。\")])]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"3.服务的基础架构在业务和mysql之间加入memcache或者redis的cache层。降低mysql的读压力。\")])]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"4.不同业务的mysql物理上放在不同机器，分散压力。\")])]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"5.使用比主库更好的硬件设备作为slave，mysql压力小，延迟自然会变小。\")])]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"6.使用更加强劲的硬件设备。\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"strong\",[s._v(\"mysql5.7之后使用MTS并行复制技术，永久解决复制延时问题\")]),s._v(\" 这个后面文章在说下吧\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"五、主从复制的配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#五、主从复制的配置\"}},[s._v(\"#\")]),s._v(\" 五、主从复制的配置\")]),s._v(\" \"),a(\"h5\",{attrs:{id:\"_1、基础设置准备\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、基础设置准备\"}},[s._v(\"#\")]),s._v(\" 1、基础设置准备\")]),s._v(\" \"),a(\"p\",[s._v(\"本次测试mysql的版本是\"),a(\"code\",[s._v(\"5.7\")]),s._v(\".  比较穷，在一台机子上装了两个mysql实例，修改下不同端口即可。\\n当然如果有钱准备两台能互相访问的机子安装两个mysql也是可以的。\")]),s._v(\" \"),a(\"p\",[s._v(\"测试阶段两个mysql实例IP相同都是本机(ip=127.0.0.1),区分下分别命名 主是\"),a(\"code\",[s._v(\"node1\")]),s._v(\"，从是\"),a(\"code\",[s._v(\"node2\")]),s._v(\"，端口不同 我实际测试用的是3306和3307)\")]),s._v(\" \"),a(\"h5\",{attrs:{id:\"_2、安装mysql数据库\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、安装mysql数据库\"}},[s._v(\"#\")]),s._v(\" 2、安装mysql数据库\")]),s._v(\" \"),a(\"p\",[s._v(\"网上很多按照的例子，这里就不重复说了，请自行百度/google(结果是数据库能正常使用),待两台mysql都按照完成之后，我们开始配置主从复制了。\")]),s._v(\" \"),a(\"h5\",{attrs:{id:\"_3、在两台数据库中分别创建数据库\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、在两台数据库中分别创建数据库\"}},[s._v(\"#\")]),s._v(\" 3、在两台数据库中分别创建数据库\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-mysql extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"--注意两台必须全部执行,两台的数据库保持相同\\ncreate database test;\\n\")])])]),a(\"h5\",{attrs:{id:\"_4、在主-node1-服务器进行如下配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4、在主-node1-服务器进行如下配置\"}},[s._v(\"#\")]),s._v(\" 4、在主（node1）服务器进行如下配置：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-yml extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-yml\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#修改配置文件，执行以下命令打开mysql配置文件\")]),s._v(\"\\nvi /etc/my.cnf\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#在mysqld模块中添加如下配置信息\")]),s._v(\"\\nlog\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\"bin=master\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\"bin \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#二进制文件名称\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#二进制日志格式，有row、statement、mixed三种格式，\")]),s._v(\"\\nbinlog\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\"format=ROW  \\nserver\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\"id=1   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#要求各个服务器的id必须不一样\")]),s._v(\"\\nbinlog\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\"do\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\"db=test   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#同步的数据库名称\")]),s._v(\"\\n\")])])]),a(\"blockquote\",[a(\"p\",[s._v(\"二进制日志格式，有row、statement、mixed三种格式;   \"),a(\"strong\",[s._v(\"row\")]),s._v(\"指的是把改变的内容复制过去，而不是把命令在从服务器上执行一遍;\"),a(\"strong\",[s._v(\"statement\")]),s._v(\"指的是在主服务器上执行的SQL语句，在从服务器上执行同样的语句。MySQL默认采用基于语句的复制，效率比较高;  \"),a(\"strong\",[s._v(\"mixed\")]),s._v(\"指的是默认采用基于语句的复制，一旦发现基于语句的无法精确的复制时，就会采用基于行的复制。\")])]),s._v(\" \"),a(\"h5\",{attrs:{id:\"_5、配置从-node2-服务器登录主服务器的账号授权\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5、配置从-node2-服务器登录主服务器的账号授权\"}},[s._v(\"#\")]),s._v(\" 5、配置从(node2)服务器登录主服务器的账号授权\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-mysql extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"--授权操作\\nset global validate_password_policy=0;\\nset global validate_password_length=1;\\ngrant replication slave on *.* to 'root'@'%' identified by '123456';\\n--刷新权限\\nflush privileges;\\n\")])])]),a(\"h5\",{attrs:{id:\"_6、从-node2-服务器的配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6、从-node2-服务器的配置\"}},[s._v(\"#\")]),s._v(\" 6、从(node2)服务器的配置\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-yml extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-yml\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#修改配置文件，执行以下命令打开mysql配置文件\")]),s._v(\"\\nvi /etc/my.cnf\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#在mysqld模块中添加如下配置信息\")]),s._v(\"\\nlog\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\"bin=master\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\"bin \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#二进制文件的名称\")]),s._v(\"\\nbinlog\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\"format=ROW  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#二进制文件的格式\")]),s._v(\"\\nserver\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\"id=2 \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#服务器的id\")]),s._v(\"\\n\")])])]),a(\"h5\",{attrs:{id:\"_7、重启主服务器的mysqld服务\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7、重启主服务器的mysqld服务\"}},[s._v(\"#\")]),s._v(\" 7、重启主服务器的mysqld服务\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-mysql extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"#重启mysql服务\\nservice mysqld restart\\n#登录mysql数据库\\nmysql -uroot -p\\n#查看master的状态\\nshow master status；\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/mysql-plus/15-master-slave-status.png\",alt:\"image-20210830194128684\"}})]),s._v(\" \"),a(\"h5\",{attrs:{id:\"_8、重启从服务器并进行相关配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_8、重启从服务器并进行相关配置\"}},[s._v(\"#\")]),s._v(\" 8、重启从服务器并进行相关配置\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-mysql extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"#重启mysql服务\\nservice mysqld restart\\n#登录mysql\\nmysql -uroot -p\\n#连接主服务器(master_host是主的IP地址，我测试本地)\\nchange master to master_host='127.0.0.1',master_user='root',master_password='123456',master_port=3306,master_log_file='master-bin.000001',master_log_pos=154;\\n#启动slave\\nstart slave\\n#查看slave的状态\\nshow slave status\\\\G #(注意没有分号)\\n\")])])]),a(\"p\",[s._v(\"至此主从的配置已经完成，此时可以在主服务器进行相关的数据添加删除工作，在从服务器看相关的状态，查看对应数据有没有变化。\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"参考《高性能mysql》\")])])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}