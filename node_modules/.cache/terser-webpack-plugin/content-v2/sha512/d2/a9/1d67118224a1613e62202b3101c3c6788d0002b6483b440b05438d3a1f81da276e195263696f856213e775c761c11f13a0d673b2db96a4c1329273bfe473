{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{505:function(e,s,i){\"use strict\";i.r(s);var _=i(18),t=Object(_.a)({},(function(){var e=this,s=e.$createElement,i=e._self._c||s;return i(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[i(\"h1\",{attrs:{id:\"巧用双索引避免出现索引不存在问题\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#巧用双索引避免出现索引不存在问题\"}},[e._v(\"#\")]),e._v(\" 巧用双索引避免出现索引不存在问题\")]),e._v(\" \"),i(\"p\",[e._v(\"问题说明：\")]),e._v(\" \"),i(\"p\",[e._v(\"企业级门户APP，有移动端组织架构，员工可以在app端查询公司用户信息,支持员工在通讯录中多字段搜索(姓名/工号/手机号/邮箱/......)，模糊搜索。我们这边是使用elasticsearch来存储员工信息，以便于实现这种搜索功能。\")]),e._v(\" \"),i(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/design-problems/design-4-contact.png\",width:\"50%\",heigh:\"50%\"}}),e._v(\" \"),i(\"p\",[e._v(\"正常把员工信息导入到es中，正常搜索也不会有问题。但是我们的产品是个企业级产品，专门服务于不同的企业客户的，解决客户各式各样的需求。比如，正常员工的字段有姓名/工号手机号/邮箱/性别等，这也是我们产品中标准的字段。\")]),e._v(\" \"),i(\"p\",[e._v(\"但是客户不同意了\")]),e._v(\" \"),i(\"ul\",[i(\"li\",[e._v(\"客户A：我们有职级字段，怎么办\")]),e._v(\" \"),i(\"li\",[e._v(\"客户B：我们有昵称字段，怎么办\")]),e._v(\" \"),i(\"li\",[e._v(\"客户C：我们有爱好字段，怎么办\")]),e._v(\" \"),i(\"li\",[e._v(\"...........\")])]),e._v(\" \"),i(\"p\",[e._v(\"如上所述，不同企业有不同的字段，为了满足客户可以自定义属于他们自己的字段，我们设计了\"),i(\"code\",[e._v(\"个性化字段\")]),e._v(\"的功能。\")]),e._v(\" \"),i(\"blockquote\",[i(\"p\",[e._v(\"个性化字段：企业可以在自己的租户下自定义此租户下员工字段，增加代码的灵活性（这个设计感兴趣的话以后有机会在写一篇）\")])]),e._v(\" \"),i(\"p\",[e._v(\"在个性化字段中，可以控制某些字段是否能够在es中搜索，要支持es中搜索，那么就需要把字段初始化在es的索引中，我们提供了web端操作的界面，管理员可以手动重置整个租户的索引以及数据。这样都会索引重建，数据重新初始化，在重建重新初始化期间，如果恰好用户正在使用搜索功能，可能会出现\"),i(\"code\",[e._v(\"索引不存在\")]),e._v(\"或者\"),i(\"code\",[e._v(\"员工搜索不到数据\")]),e._v(\"等问题。\")]),e._v(\" \"),i(\"p\",[i(\"strong\",[e._v(\"本文就是来说明下在es初始化期间怎么保证数据能够正常访问，方案：以空间换时间，引入双索引的来处理\")])]),e._v(\" \"),i(\"p\",[e._v(\"思路来源：在看《redis设计与实现》一书的时候，其中说明redis对字典的哈希表执行rehash的时候就是有两个hash表交换处理的，分别是ht[0]和ht[1]\")]),e._v(\" \"),i(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/design-problems/design-4-redis-rehash.jpeg\",width:\"50%\"}}),e._v(\" \"),i(\"h2\",{attrs:{id:\"双索引设计\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#双索引设计\"}},[e._v(\"#\")]),e._v(\" 双索引设计\")]),e._v(\" \"),i(\"p\",[e._v(\"系统中默认两个索引index0和index1，如果正在提供服务的索引是index0 ，那么在下次初始化重建的时候就会初始化index1, 待初始化完成后则index1对外提供服务，删除索引index0。如此反复循环。\")]),e._v(\" \"),i(\"h3\",{attrs:{id:\"_1-名词解释\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-名词解释\"}},[e._v(\"#\")]),e._v(\" 1. 名词解释\")]),e._v(\" \"),i(\"blockquote\",[i(\"p\",[e._v(\"下面单独是说明0租户下的索引设计，多租户下区分各个redis key和es索引即可\")])]),e._v(\" \"),i(\"ul\",[i(\"li\",[e._v(\"elasticsearch中有两个索引，一个index0 (员工索引0，默认)，另一个index1(员工索引1)\")]),e._v(\" \"),i(\"li\",[e._v(\"ajisun:elastic:employee:init0（有过期时间的单key，判断此租户是否正在初始化中，）\")]),e._v(\" \"),i(\"li\",[e._v(\"ajisun:elastic:employee，0（hash key，存储0租户正在使用的索引）\")])]),e._v(\" \"),i(\"h3\",{attrs:{id:\"_2-索引重建步骤\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-索引重建步骤\"}},[e._v(\"#\")]),e._v(\" 2. 索引重建步骤：\")]),e._v(\" \"),i(\"ol\",[i(\"li\",[e._v(\"通过 redis key\"),i(\"code\",[e._v(\"ajisun:elastic:employee:init0\")]),e._v(\" 来判断当前租户有没有正在初始化中，如果有，则忽略此次操作，如果没有初始化，请看第2步。\")]),e._v(\" \"),i(\"li\",[e._v(\"通过redis hash key \"),i(\"code\",[e._v(\"ajisun:elastic:employee，{tenantId}\")]),e._v(\" 获取当前租户使用的es索引=oldIndex\")]),e._v(\" \"),i(\"li\",[e._v('如果oldIndex为空，就在redis中设置租户默认索引redis.hshPut(\"ajisun:elastic:employee\", 0, \"index0\"), 那么即将初始化重建的新索引newIndex是 “index1”')]),e._v(\" \"),i(\"li\",[e._v(\"如果oldIndex不为空,那么当前正在提供服务的索引是oldIndex，即将要初始化重建的新索引newIndex是非oldIndex(如果oldIndex是\"),i(\"code\",[e._v(\"index0\")]),e._v(\"，那非oldIndex是\"),i(\"code\",[e._v(\"index1\")]),e._v(\"，反之一样)\")]),e._v(\" \"),i(\"li\",[e._v('然后设置此租户索引正在初始化的key redis.strSet(\"ajisun:elastic:employee:init0\", newIndex, 5L, TimeUnit.MINUTES); 加过期时间防止应用奔溃，导致状态是一直是初始化中')]),e._v(\" \"),i(\"li\",[e._v(\"初始化新的索引newIndex,添加数据.\")]),e._v(\" \"),i(\"li\",[e._v('删除初始化状态的redis key，redis.delKey(\"ajisun:elastic:employee:init0\");')]),e._v(\" \"),i(\"li\",[e._v('改变redis中租户默认索引为newIndex, redis.hshPut(\"ajisun:elastic:employee\",0, newIndex);')]),e._v(\" \"),i(\"li\",[e._v(\"删除elasticsearch中的旧索引oldIndex。\")])]),e._v(\" \"),i(\"p\",[e._v(\"流程图如下：\")]),e._v(\" \"),i(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/design-problems/design-4-es-double-index.png\",width:\"60%\"}}),e._v(\" \"),i(\"h3\",{attrs:{id:\"_3-数据搜索\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-数据搜索\"}},[e._v(\"#\")]),e._v(\" 3. 数据搜索\")]),e._v(\" \"),i(\"p\",[e._v('搜索数据的就比较简单，直接在redis.hshGet(\"ajisun:elastic:employee\",0) 中查找到0租户目前正在使用索引，如果为空则使用默认的索引'),i(\"code\",[e._v(\"index0\")]),e._v(\"搜索。\")]),e._v(\" \"),i(\"h3\",{attrs:{id:\"_4-数据修改-存储\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-数据修改-存储\"}},[e._v(\"#\")]),e._v(\" 4. 数据修改/存储\")]),e._v(\" \"),i(\"p\",[e._v(\"主要就是如果索引在初始化中，则直接把数据的修改/存储 操作新的索引上\")]),e._v(\" \"),i(\"ol\",[i(\"li\",[e._v('redis.hshGet(\"ajisun:elastic:employee\",0)  中获取0租户正在使用的索引。')]),e._v(\" \"),i(\"li\",[e._v(\"如果为空默认索引是index0\")]),e._v(\" \"),i(\"li\",[e._v('如果索引不为空，则获取redis缓存中redis.strGet(\"ajisun:elastic:employee:init0\") 0租户是否为空')]),e._v(\" \"),i(\"li\",[e._v(\"如果不为空，则说明正在初始化中，则保存数据的索引使用初始化中的索引\")])]),e._v(\" \"),i(\"p\",[e._v(\"以上就是针对es索引初始化期间影响正常使用的解决方案，其实没有难度的，只是提供一种思考方式，有问题欢迎提出交流。\")])])}),[],!1,null,null,null);s.default=t.exports}}]);","extractedComments":[]}