{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{471:function(t,s,a){\"use strict\";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"jvm中的内存分配\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#jvm中的内存分配\"}},[t._v(\"#\")]),t._v(\" JVM中的内存分配\")]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/jvm-img/jvm-6-memory-allocation.png\"}}),t._v(\" \"),a(\"p\",[t._v(\"以下测试的jdk版本是1.8，垃圾收集器是\"),a(\"strong\",[t._v(\"ps+po\")])]),t._v(\" \"),a(\"p\",[t._v(\"Java的主要特点就是不用开发人员关注内存的分配和内存的回收，之前文章我们说明了\"),a(\"strong\",[t._v(\"怎么判断垃圾对象和垃圾回收算法，\"),a(\"strong\",[t._v(\"以及\")]),t._v(\"垃圾收集器\")]),t._v(\"，下面我们说下对象内存的分配。\")]),t._v(\" \"),a(\"p\",[t._v(\"前文也说过对象的分配就是在堆上分配，对象主要分配在Eden区上，但是也可能按照线程优先分配在TLAB上，少数情况下可能会直接分配在老年代中。具体分配在哪里并不是百分百固定的，其会受垃圾回收器组合，以及虚拟机中与内存相关的参数设置的影响。\")]),t._v(\" \"),a(\"p\",[t._v(\"强调说明：空对象也会占用一些eden内存，也就是说jvm运行本身会占用一些内存，如下\"),a(\"strong\",[t._v(\"没有任何对象，但是eden占用了近3M\")]),t._v(\"：\")]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/jvm-img/jvm-6-nullObject.png\"}}),t._v(\" \"),a(\"p\",[t._v(\"配置如下\")]),t._v(\" \"),a(\"p\",[t._v(\"如果想要看的虚拟机垃圾回收的信息可以使用-XX:PrintGCDetails参数控制，idea中配置如下\")]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/jvm-img/jvm-6-vmOptions.png\"}}),t._v(\" \"),a(\"p\",[t._v(\"如上代码配置 \"),a(\"code\",[t._v(\"-Xms50m -Xmx50m -Xmn20m -XX:+PrintGCDetails -XX:+PrintHeapAtGC\")]),t._v(\" 来控制这块代码的的堆内存大小。\")]),t._v(\" \"),a(\"p\",[t._v(\"-Xms50m ： 堆内存最小50M\")]),t._v(\" \"),a(\"p\",[t._v(\"-Xmx50m ： 堆内存最大50M\")]),t._v(\" \"),a(\"p\",[t._v(\"-Xmn20m ： 新生代20M，老年代就剩余30M\")]),t._v(\" \"),a(\"p\",[t._v(\"-XX:+PrintGCDetails：打印gc信息\")]),t._v(\" \"),a(\"p\",[t._v(\"含义是 Java堆最大最小都是50MB 且不可变化，由于新生代可以分为Eden区和两个Survivor区(from区和to区)，且比例是8:1:1，\"),a(\"strong\",[t._v(\"所以Eden区大概16M，from区和to区各2M\")]),t._v(\"。具体参考\"),a(\"strong\",[t._v(\"堆内存如何分代\")]),t._v(\"。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_1-对象优先在eden区分配\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-对象优先在eden区分配\"}},[t._v(\"#\")]),t._v(\" 1. 对象优先在Eden区分配\")]),t._v(\" \"),a(\"p\",[t._v(\"大多数情况下，对象是分配在新生代的Eden区（大多数对象朝生夕死），当Eden区的内存不够的时候 虚拟机会发起一次Minor GC。\")]),t._v(\" \"),a(\"p\",[t._v(\"代码如下\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * vm参数：-Xms50m -Xmx50m -Xmn20m -XX:+PrintGCDetails\\n */\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Allocation\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"final\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" _1MB \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1024\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1024\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"testAllocation\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" one \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"_1MB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" two \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"_1MB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" args\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"testAllocation\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"运行下看看是不是这样大小以及比例划分的，GC日志如下\")]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/jvm-img/jvm-6-log-Eden.png\"}}),t._v(\" \"),a(\"p\",[t._v(\"上面日志可以看出\"),a(\"code\",[t._v(\"eden space 15360K,from space 2560K, to space 2560K\")]),t._v(\"  分别是eden=16MB，from=2MB，to=2MB，新生代总可用空间共17920K(Eden区+1个Survivor区)。与前面说的差不多\")]),t._v(\" \"),a(\"p\",[t._v(\"日志中 \"),a(\"code\",[t._v(\"eden space 15360K, 87%\")]),t._v(\" 说明eden区被占用了87%，大约13MB，那代码中总共就两个对象每个5MB，为什么会有13MB呢，这个就是文章开头说的\"),a(\"strong\",[t._v(\"jvm运行本身也是会占用内存的\")])]),t._v(\" \"),a(\"p\",[t._v(\"由日志可以看出one，two两个对象是直接分配在Eden区的。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_2-大对象直接进入老年代\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-大对象直接进入老年代\"}},[t._v(\"#\")]),t._v(\" 2. 大对象直接进入老年代\")]),t._v(\" \"),a(\"p\",[t._v(\"所谓大对象就是需要大量连续续内存空间的Java对象，最典型的大对象便是那种很长的字符串，或者元素数量很庞大的数组，本节例子中的byte[]数组就是典型的大对象。如果一个对象很大，在进行内存分配的时候，即使内存中有空间，由于空间不连续无法分配给这个对象，进而提前触发垃圾回收，同时还可以避免大对象在eden区和2个Survivor区来回复制(开发期间尽量避免大对象的出现)。\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"-XX：PretenureSizeThreshold参数只对Serial和ParNew两款新生代收集器有效，HotSpot 的其他新生代收集器，如Parallel Scavenge并不支持这个参数。如果必须使用此参数进行调优，可考虑 ParNew加CMS的收集器组合。    ----- 来自《深入理解虚拟机》\")])]),t._v(\" \"),a(\"p\",[t._v(\"1.8默认的垃圾收集器是ps+po，所以这个参数是没有效果的，我们这里测试直接用较大的对象。\")]),t._v(\" \"),a(\"p\",[t._v(\"配置和前面一样，eden大小是16M。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * vm参数：-Xms50m -Xmx50m -Xmn20m -XX:+PrintGCDetails\\n */\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Allocation\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"final\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" _1MB \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1024\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1024\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"testAllocation\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" one \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"_1MB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" args\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"testAllocation\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"GC日志如下\")]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/jvm-img/jvm-6-log-big.png\"}}),t._v(\" \"),a(\"p\",[t._v(\"如日志中\"),a(\"code\",[t._v(\"ParOldGen total 30720K, used 20480K\")]),t._v(\" 表示老年代中被使用了大概20MB，由于这次对象较大，而eden中没有足够的内存可用，所以直接分配到老年代中。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_3-长期存活的对象将进入老年代\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-长期存活的对象将进入老年代\"}},[t._v(\"#\")]),t._v(\" 3. 长期存活的对象将进入老年代\")]),t._v(\" \"),a(\"p\",[t._v(\"虚拟机中每个对象都是有年龄的，对象通常在Eden区里诞生，如果经过第一次Minor GC后仍然存活，并且能被Survivor容纳的话，该对象会被移动到Survivor空间中，并且将其对象 年龄设为1岁。对象在Survivor区中每熬过一次Minor GC，年龄就增加1岁，当它的年龄增加到一定程度（默认为15），就会被晋升到老年代中。对象晋升老年代的年龄阈值，可以通过参数\"),a(\"code\",[t._v(\"-XX:MaxTenuringThreshold\")]),t._v(\"设置。\")]),t._v(\" \"),a(\"p\",[t._v(\"vm的变化：年龄设置1，新生代大小10M\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"-Xms50m -Xmx50m -Xmn10m -XX:+PrintGCDetails  -XX:MaxTenuringThreshold=1\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * vm参数：-Xms50m -Xmx50m -Xmn10m -XX:+PrintGCDetails -XX:MaxTenuringThreshold=1\\n */\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Allocation\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"final\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" _1MB \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1024\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1024\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"testAllocation\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" one \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"_1MB \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 较小的对象 可以存放到Survivor\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" two \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" _1MB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" three \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" _1MB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" four \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" _1MB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 这里发生第一次gc\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"=======\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" five \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" _1MB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" six \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" _1MB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n      \\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"=======\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" seven \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"byte\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" _1MB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 这里发生第二次gc\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" args\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"testAllocation\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"正常的过程是one,two,three在eden区，分配four对象的时候eden空间不够 触发GC，one对象比较小，会进入Survivor区，two,three移到老年代，接着four对象进入eden区 。接着分配five, six,seven对象到eden区 ，seven对象分配的时候eden空间不够再次触发GC，由于one对象的年龄到了1，则会进入老年代。\")]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/jvm-img/jvm-6-age-1.png\"}}),t._v(\" \"),a(\"p\",[t._v(\"从上面日志可以看出第一次gc之后新生代剩余992k(包含了)，第二次gc剩余192k 小于one对象的大小(\"),a(\"strong\",[t._v(\"至于为什么没有回收干净，这点我也不是很清楚，有知道的大佬请告诉我\")]),t._v(\")\")]),t._v(\" \"),a(\"p\",[t._v(\"我把\"),a(\"code\",[t._v(\"-XX:MaxTenuringThreshold=15\")]),t._v(\" 在来看看日志\")]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/jvm-img/jvm-6-age-15.png\"}}),t._v(\" \"),a(\"p\",[t._v(\"如图，第二次gc之后年轻代剩余912k，和第一次gc的992k变化不大，说明one对象年龄未到还是存活在Survivor区。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_4-动态对象年龄判定\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-动态对象年龄判定\"}},[t._v(\"#\")]),t._v(\" 4. 动态对象年龄判定\")]),t._v(\" \"),a(\"p\",[t._v(\"虚拟机并不是严格按照对象年龄阀值\"),a(\"code\",[t._v(\"-XX:MaxTenuringThreshold\")]),t._v(\"来判断是否可以晋升老年代，而是会通过动态对象年龄判断。\")]),t._v(\" \"),a(\"p\",[t._v(\"所谓的动态对象年龄判断就是 \"),a(\"strong\",[t._v(\"把Survivor区中的所有对象，从年龄为1的对象开始计算其大小，一直累加到年龄为n的对象，假如累加到年龄n的时候大于等于Survivor区的一半，那么就会把年龄大于等于n的对象全部移到老年代。\")]),t._v(\" 并不是某个特定年龄对象累加(书中的描述容易导致误解)\")]),t._v(\" \"),a(\"p\",[t._v(\"规则是这样的规则，但是我按照这种规则通过代码实验并没有测试成功，最后的Survivor区占据仍然有很多\")]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/jvm-img/jvm-6-dynamic-age.png\"}}),t._v(\" \"),a(\"h3\",{attrs:{id:\"_5-空间分配担保\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-空间分配担保\"}},[t._v(\"#\")]),t._v(\" 5. 空间分配担保\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"在发生Minor GC之前，虚拟机必须先检查老年代最大可用的连续空间是否大于新生代所有对象总 空间，如果这个条件成立，那这一次Minor GC可以确保是安全的。如果不成立，则虚拟机会先查看- XX:HandlePromotionFailure参数的设置值是否允许担保失败（Handle Promotion Failure）；如果允许，那会继续检查老年代最大可用的连续空间是否大于历次晋升到老年代对象的平均大小，如果大于，将尝试进行一次Minor GC，尽管这次Minor GC是有风险的；如果小于，或者-XX:HandlePromotionFailure设置不允许冒险，那这时就要改为进行一次Full GC。  ----- 摘抄自《深入理解虚拟机》\")])]),t._v(\" \"),a(\"p\",[t._v(\"以上是对空间分配担保的规则，但是已经过期了，JDK 6 Update 24之后， -XX:HandlePromotionFailure参数不会再影响到虚拟机的空间分配担保策略。规则变为**只要老年代的连续空间大于新生代对象总大小或者历次晋升的平均大小，就会进行 Minor GC，否则将进行Full GC。**如下\")]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/jvm-img/jvm-6-old-danbao.png\"}}),t._v(\" \"),a(\"h3\",{attrs:{id:\"_6-对象栈上分配\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-对象栈上分配\"}},[t._v(\"#\")]),t._v(\" 6. 对象栈上分配\")]),t._v(\" \"),a(\"p\",[t._v(\"除了以上5中最基本的分配原则外，还设计了\"),a(\"strong\",[t._v(\"栈上分配\")]),t._v(\"。为了减少对象在堆中分配的数量，JVM通过逃逸分析确定对象会不会被外部引用，对于不存在逃逸的对象可以直接分配在栈上(回收的时候不需要gc的介入，栈上的对象会随着方法一起出栈而回收内存)，减轻gc的压力。\")]),t._v(\" \"),a(\"p\",[t._v(\"还有一种\"),a(\"strong\",[t._v(\"TLAB分配\")]),t._v(\"：全称是Thread Local Allocation Buffer，即线程本地分配缓存区，TLAB本身占用Eden区空间，在开启TLAB的情况下，虚拟机会为\"),a(\"strong\",[t._v(\"每个Java线程分配一块TLAB空间\")]),t._v(\"。JVM使用TLAB来避免多线程冲突，在给对象分配内存时，每个线程使用自己的TLAB，这样可以避免线程同步，提高了对象分配的效率。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"总结\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结\"}},[t._v(\"#\")]),t._v(\" 总结\")]),t._v(\" \"),a(\"p\",[t._v(\"本文介绍了在经典分代设计中的5种基本的内存分配原则：\"),a(\"strong\",[t._v(\"对象优先在Eden区分配\")]),t._v(\"，\"),a(\"strong\",[t._v(\"大对象直接进入老年代\")]),t._v(\"，\"),a(\"strong\",[t._v(\"长期存活的对象进入老年代\")]),t._v(\"，\"),a(\"strong\",[t._v(\"动态对象年龄判定\")]),t._v(\"以及\"),a(\"strong\",[t._v(\"空间分配担保\")]),t._v(\"，其实还有还会存在\"),a(\"strong\",[t._v(\"栈上分配\")]),t._v(\"(需要进行逃逸分析)以及\"),a(\"strong\",[t._v(\"线程本地缓冲区(TLAB)\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"栈上分配->TLAB->新生代->老年代\")])]),t._v(\" \"),a(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/AJiSun/CDN/jvm-img/jvm-6-object-assignment.png\"}})])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}