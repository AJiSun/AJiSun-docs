(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{483:function(s,t,a){"use strict";a.r(t);var r=a(18),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql存储引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql存储引擎"}},[s._v("#")]),s._v(" MySQL存储引擎")]),s._v(" "),a("blockquote",[a("p",[s._v("本文mysql实验版本 :  5.7.21")])]),s._v(" "),a("p",[s._v("基础架构篇了解到执行器执行这个执行计划，通过调用存储引擎的API来操作数据。")]),s._v(" "),a("p",[s._v("mysql提供了一系列存储引擎的API，所有的存储引擎都要符合API要求，因此可以实现这种插件式的存储引擎，可以根据不同的需求选择合适的存储引擎（就像握推杠铃一样，可以按需选择不同大小的杠铃片，嗯对的）。")]),s._v(" "),a("p",[s._v("存储引擎是"),a("strong",[s._v("针对表的而不是库，对于同一个库不同的表可以使用不同的存储引擎")]),s._v("。")]),s._v(" "),a("p",[s._v("常见的存储引擎有 "),a("strong",[s._v("MyISAM")]),s._v("，"),a("strong",[s._v("InnoDB")]),s._v("，"),a("strong",[s._v("Memory")])]),s._v(" "),a("p",[s._v("查看当前数据支持的存储引擎：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AJiSun/CDN/mysql-plus/2-engines.png",alt:"mysql-engines"}})]),s._v(" "),a("ol",[a("li",[s._v("在新建表的时候可以选择存储引擎")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user'")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'id'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARACTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" utf8 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLLATE")]),s._v(" utf8_bin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" MyISAM\n")])])]),a("p",[s._v("ENGINE = MyISAM 代表这个表的存储引擎是MyISAM 。")]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("查看表相关信息，例如mysql库中的user表")])]),s._v(" "),a("ul",[a("li",[s._v("使用show table status 查看表信息(不限版本)")])]),s._v(" "),a("blockquote",[a("p",[s._v("需要先切换到对应的数据库下再执行此命令")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Database")]),s._v(" changed\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user'")]),s._v(" \\G "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("row")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n           Name: "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Engine")]),s._v(": MyISAM\n        Version: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n     Row_format: Dynamic\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Rows")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n Avg_row_length: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v("\n    Data_length: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("384")]),s._v("\nMax_data_length: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("281474976710655")]),s._v("\n   Index_length: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v("\n      Data_free: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Auto_increment")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n    Create_time: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2018")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("06")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("09")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("51")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("\n    Update_time: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2018")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("06")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("09")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("53")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("08")]),s._v("\n     Check_time: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n      Collation: utf8_bin\n       Checksum: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n Create_options: \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Comment")]),s._v(": Users "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("global")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("privileges")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("row")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ul",[a("li",[s._v("还可以使用information_schema查看表信息(mysql5.0以后的版本支持)")])]),s._v(" "),a("blockquote",[a("p",[s._v("会查出实例中所有库中的表信息，但是可以指定TABLE_SCHEMA查询指定库的表")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" information_schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tables")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" table_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" TABLE_SCHEMA"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mysql'")]),s._v(" \\G"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("简单介绍小输出字段的含义：")]),s._v(" "),a("blockquote",[a("p",[s._v("Name: 表名。")]),s._v(" "),a("p",[s._v("Engine: 存储引擎。")]),s._v(" "),a("p",[s._v("Version：版本，默认10。")]),s._v(" "),a("p",[s._v("Row_format: 行的格式。")]),s._v(" "),a("p",[s._v("Rows: 表中的行数，对应MyISAM和其他一些存储引擎，该值是精确的; 而InnoDB该值是估计的。")]),s._v(" "),a("p",[s._v("Avg_row_length: 平均每行包含的字节数。")]),s._v(" "),a("p",[s._v("Data_length: 表数据的大小(字节)。")]),s._v(" "),a("p",[s._v("Max_data_length: 表数据的最大容量(和存储引擎有关)。")]),s._v(" "),a("p",[s._v("Index_length: 索引的大小(字节)。")]),s._v(" "),a("p",[s._v("Data_free: 对于MyISAM表，表示已经分配但是没有使用的空间。")]),s._v(" "),a("p",[s._v("Auto_increment: 下一个auto_increment值。")]),s._v(" "),a("p",[s._v("Create_time:  表的创建时间。")]),s._v(" "),a("p",[s._v("Update_time: 表数据最后修改时间。")]),s._v(" "),a("p",[s._v("Check_time: 使用check table命令或者myisamchk工具最后一次检查表的时间。")]),s._v(" "),a("p",[s._v("Collation: 表的默认字符集和字符列排序规则。")]),s._v(" "),a("p",[s._v("Checksum: 如果启用保存的是整个表的实时校验和。")]),s._v(" "),a("p",[s._v("Create_options: 创建表是指定的其他选项。")]),s._v(" "),a("p",[s._v("Comment: 包含其他额外信息")])]),s._v(" "),a("h3",{attrs:{id:"_1-innodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-innodb"}},[s._v("#")]),s._v(" 1. InnoDB")]),s._v(" "),a("p",[s._v("InnoDB是mysql5.5.x开始默认的事务型引擎，也是使用最广泛的存储引擎。被设计用来处理大量短期事务的。")]),s._v(" "),a("p",[s._v("InnoDB所有的表都保存在同一个数据文件中（也可能是多个文件，或者是独立的表空间文件），表的大小只受限于操作系统文件的大小。表的结构定义存在**.frm"),a("strong",[s._v("后缀文件中，数据和索引集中存放在")]),s._v(".idb**后缀文件中。"),a("strong",[s._v("因为表数据和索引是在同一个文件，InnoDB的索引是聚簇索引")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("InnoDB采用MVCC支持高并发")]),s._v("，并且实现了四种标准的隔离级别(读未提交，读已提交，可重复读，可串行化)，其默认级别是"),a("strong",[s._v("REPEATABLE-READ")]),s._v("(可重复读)，并且通过间隙锁(next-key locking)策略防止幻读的出现。间隙锁不仅仅锁定查询涉及的行，还会对索引中的间隙行进行锁定，以防止幻影行的插入。")]),s._v(" "),a("p",[a("strong",[s._v("InnoDB表是基于聚簇索引建立的")]),s._v("，聚簇索引对主键的查询有很高的性能。但是InnoDB的非主键索引中必须包含主键列，所以如果主键列很大的话，非主键索引也会很大。如果一张表的索引较多，主键应该尽可能的小。关于索引，后面会详细讲解。")]),s._v(" "),a("p",[s._v("InnoDB的内部优化，包括"),a("strong",[s._v("磁盘预读")]),s._v("(从磁盘读取数据时采用可预测性读取)，"),a("strong",[s._v("自适应哈希")]),s._v("(自动在内存中创建hash索引以加速读操作)以及能够加速插入操作的"),a("strong",[s._v("插入缓冲区")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_2-myisam"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-myisam"}},[s._v("#")]),s._v(" 2. MyISAM")]),s._v(" "),a("p",[s._v("在mysql5.1及之前的版本，MyISAM是默认的存储引擎。提供了大量的特性，包括全文索引，压缩，空间函数等，但是不支持事务和行级锁，而且有一个严重的问题是奔溃后无法安全恢复。")]),s._v(" "),a("p",[s._v("MyISAM的数据表存储在磁盘上是3个文件，表结构定义存在**.frm"),a("strong",[s._v("后缀文件中，表数据存储在")]),s._v(".MYD"),a("strong",[s._v("后缀文件中，表索引存储在")]),s._v(".MYI"),a("strong",[s._v("后缀文件中。"),a("strong",[s._v("表数据和表索引在不同的文件中，所以MyISAM索引是非聚簇索引")]),s._v("。而且")]),s._v("MyISAM可以存储表数据的总行数**。")]),s._v(" "),a("p",[s._v("MyISAM表支持数据压缩，对于表创建后并导入数据以后，不需要修改操作，可以采用MyISAM压缩表。压缩命令："),a("strong",[s._v("myisampack")]),s._v("，压缩表可以极大的减少磁盘空间占用，因此也可以减少磁盘I/O，提高查询性能。而且压缩表中的数据是单行压缩，所以单行读取是不需要解压整个表。")]),s._v(" "),a("h3",{attrs:{id:"_3-memory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-memory"}},[s._v("#")]),s._v(" 3. Memory")]),s._v(" "),a("p",[s._v("Memory存储引擎的数据是存放在内存中的，所以如果服务器重启会导致数据丢失，但是表结构还是存在的表结构是以 "),a("strong",[s._v(".frm")]),s._v(" 后缀的文件中。")]),s._v(" "),a("p",[s._v("Memory默认hash索引，因此查询非常快。Memory表是表级锁，因此并发写入的性能较低。不支持BLOB或TEXT类型的列，并且每行的长度都是固定的，所以即使指定了varchar列实际存储也会转换成char，会导致内存浪费。")]),s._v(" "),a("p",[s._v("如果mysql查询过程中需要使用临时表来保存中间结果，内部使用的临时表就是Memory表，如果中间结果太大超出Memory表的限制或者含有BLOB或TEXT字段，那么临时表会转换成MyISAM表。")]),s._v(" "),a("p",[s._v("上面介绍了三种，你如何选择存储引擎呢：")]),s._v(" "),a("ul",[a("li",[s._v("事务 ：目前只有Innodb能完美的支持事务。")]),s._v(" "),a("li",[s._v("备份 ：只有Innodb有免费的在线热备方案，mysqldump不算在线热备的方案，它需要对数据加锁。")]),s._v(" "),a("li",[s._v("崩溃恢复：myisam表由于系统崩溃导致数据损坏的概率比Innodb高跟很多，而且恢复速度也没有innodb快。")]),s._v(" "),a("li",[s._v("特有的特性：如需要聚簇索引，那就需要选择innodb存储引擎，有的需要使用地理空间搜索，那就选择myisam 。")])]),s._v(" "),a("p",[s._v("mysql的存储引擎有很多，这里主要介绍了以上3中，其中InnoDB是现在使用最广泛也是默认的存储引擎，如果没有特殊需求使用默认的即可，也就是InnoDB。后面有文章详解InnoDB.")])])}),[],!1,null,null,null);t.default=e.exports}}]);